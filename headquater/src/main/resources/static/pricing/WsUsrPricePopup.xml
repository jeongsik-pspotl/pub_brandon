<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="/pricing/css/admin.css" type="text/css"?>
<?xml-stylesheet href="/pricing/css/base.css" type="text/css"?>
<?xml-stylesheet href="/pricing/css/contents.css" type="text/css"?>
<html xmlns="http://www.w3.org/1999/xhtml"
    xmlns:ev="http://www.w3.org/2001/xml-events"
    xmlns:w2="http://www.inswave.com/websquare" xmlns:xf="http://www.w3.org/2002/xforms">
    <head meta_vertical_guides="" meta_horizontal_guides="">
        <w2:type>COMPONENT</w2:type>
        <w2:buildDate/>
        <w2:MSA/>
        <xf:model>
            <w2:dataCollection baseNode="map"/>
            <w2:workflowCollection/>
        </xf:model>
        <w2:layoutInfo/>
        <w2:publicInfo method=""/>
		<script type="text/javascript" src="/js/config.js"></script>
		<script type="text/javascript" src="/js/common.js"></script>
        <script type="test/javascript" src="https://cdn.iamport.kr/v1/iamport.js"></script>
        <script lazy="false" type="text/javascript"><![CDATA[
			scwin.productSeq = 0;
scwin.onpageload = function() {
	/**
	 * payTypeCd 1 이면 매월, 2이면 매년으로 제품 플렌이 변경 된다.
	 */
	var payTypeCd = $p.getParameter('data').payTypeCd;
    if(payTypeCd == '1') product_plan.setValue("(매월)")
    else product_plan.setValue("(매년)")
	/**
	 * 해당 페이지 로드 하자마자 상품정보 얻기 위한 함수 호출
	 */
    scwin.btn_pg_onclick();
};

scwin.pgType = "";
scwin.pgMonthOrDay = "";
scwin.btn_pg_onclick = function(e) {

	let data = {
		"elData" : {
			"teamId" : "WHive"
		}
	};

	/**
	 * teamId: WHive 값 고정으로 하여 결제 정보를 전달 한다.
	 * 아래 ws pay api 서버로 요청 하고 응답 받으면 scwin.productList 함수로 콜백 받는다.
	 */
	executeAjaxToken("/product/merchant/find/now.pwkjson", data, scwin.productList);

};

scwin.productList = function(e){
	// 각 상품의 seq : e.payProductVoList.productSeq
    let jsonResult =  e.response;

	var payTypeCd = $p.getParameter('data').payTypeCd;
	/**
	 * 아래 조회 결과 값을 세팅한다.
	 */
	for(var i = 0; i < jsonResult.length; i++){

		// if(jsonResult[i].productPeriod == "1" && payTypeCd == "1"){
		/**productPeriod 30일인 경우는 무료 플랜에 데이터 설정 값이다.
		 * 아래 설정 값에 대한 설명을 추가하겠다.
		 * INSERT INTO  PAY_PRODUCT(TEAM_ID, PRODUCT_NAME, PRICE_KRW, PRODUCT_PERIOD ,REG_ID) VALUES ('WHive','월간 정기결제', 300000, 1, 'jeongsik' ); //월간 결제

		 INSERT INTO  PAY_PRODUCT(TEAM_ID, PRODUCT_NAME, PRICE_KRW, PRODUCT_PERIOD, REG_ID) VALUES ('WHive','연간 정기결제', 3000000, 12, 'jeongsik' ); // 연간 결제

		 INSERT INTO  PAY_PRODUCT(TEAM_ID, PRODUCT_NAME, PRICE_KRW, PRODUCT_PERIOD ,REG_ID) VALUES ('WHive','월간 정기결제', 0, 30, 'jeongsik' ); // 무료 플렌
		 - 지금은 관리자 페이지 통해서 데이터 입력이 가능하다고 한다.
		 - 구독 서비스 제품 추가시, 해당 사항은 클라우드사업팀 이유진 연구원한테 문의바란다.
		 * */

        if(jsonResult[i].productPeriod == "30" && payTypeCd == "1"){
			price.setValue(addComma(jsonResult[i].priceKRW));
			product_name.setValue(jsonResult[i].productName);
			scwin.pgMonthOrDay = "day";
			scwin.productSeq =  jsonResult[i].productSeq;

		}else if(jsonResult[i].productPeriod == "12" && payTypeCd == "2"){
			price.setValue(addComma(jsonResult[i].priceKRW));
			product_name.setValue(jsonResult[i].productName);
			scwin.pgMonthOrDay = "month";
			scwin.productSeq =  jsonResult[i].productSeq;

		}
	}


};

scwin.prodOneOnclick = function(e){
	/**
	 * prodOneOnclick 수행시 바로 결제 기능이 순차적으로 실행된다.
	 * @type {NodeListOf<Element>}
	 */

	const checkboxes = document.querySelectorAll('input[type="checkbox"]');
	let num = 0;

	checkboxes.forEach((checkbox) => {
		if(checkbox.checked) num ++;
	})
	if(checkboxes.length -1 > num) {
		openPopup({
			type: 'confirm',
			title:'Information',
			message:'이용약관 동의를 해주세요.',
			callback: () => {
				$p.$(".loadingBox").css("display","block");
			},
			loadCallback: (popup) => {
				popup.querySelector('.alertbox').style.zIndex = 6101;
				popup.querySelector('.dim').style.zIndex = 6100;
			}
		})
		return false;

	}

	let data = {
		"elData" : {
				"teamId":"WHive",
				"productSeq": parseInt(scwin.productSeq),
				"pgProvider" : 'toss'
				}
		}

	executeAjaxToken("/payment/prepare.pwkjson", data, scwin.onSuccess);
};

scwin.onSuccess = function(e){
	// 상품조회 성공 후처리 추가 (결제창 연결)
	scwin.btn_toss_onclick(e);
}

			scwin.btn_toss_onclick = function(e) {
				var USER_ID = $p.getParameter('data').USER_ID;
				var EMAIL = $p.getParameter('data').EMAIL;
				var payTypeCd = $p.getParameter('data').payTypeCd;
				var jsonResponse = e.response;
				IMP.init('imp67046332'); // 가맹점 식별 코드
				IMP.request_pay(
						{
							// ------data 예시--------
							// pg: 'tosspayments.iamporttest_4',
							// merchant_uid: '20230818016896290431',
							// name: '월간 정기결제',
							// escrow: false,
							// amount: 89000,
							// notice_url: 'http://43.201.134.221/notice/first/toss.do',
							// customer_id: 'customer_id',
							// customer_uid: 'QJ3bg5hauS',
							// buyer_email: 'test@inswave.com'
							// ----------------------




							// pg: elData.pgProvider, // pg사.상점mid
							// merchant_uid: elData.payOrderVo.orderId, // 주문번호 - pk
							// name: elData.payOrderVo.productName, // 상품명
							// escrow: false, // 고정값
							// amount: elData.payOrderVo.productPrice, // 상품가격
							// notice_url: elData.noticeUrl, // 웹훅 url
							// customer_id: 'pspotl87', // 사용자 아이디 - 특수문자 포함하면 안됨
							// customer_uid: elData.payOrderVo.customerUid, // 빌링키 - pk, 정기결제시 필수값이다.
							// buyer_email: "pspotl87@inswave.com" // 사용자 이메일 주소

							pg: jsonResponse.pgProvider, // pg사.상점mid
							merchant_uid: jsonResponse.orderId, // 주문번호 - pk
							name: jsonResponse.productName, // 상품명
							escrow: false, // 고정값
							amount: jsonResponse.productPrice, // 상품가격
							notice_url: jsonResponse.noticeUrl + "?teamId=WHive", // 웹훅 url
							customer_id: USER_ID, // 사용자 아이디 - 특수문자 포함하면 안됨
							customer_uid: jsonResponse.customerUid, // 빌링키 - pk, 정기결제시 필수값이다.
							buyer_email: EMAIL, // 사용자 이메일 주소,
							currency : "KRW",
							m_redirect_url: g_config.HTTPSERVER_URL

						},
						function (rsp) { // callback
							if (rsp.success) {
								// 빌링키 발급성공
								// console.log(rsp);

								let data = {
									"elData" : {
											"teamId" : "WHive",
											"impUid": rsp.imp_uid, // 포트원 imp_uid
											"customerUid": jsonResponse.customerUid, // 빌링키
											"productSeq": scwin.productSeq ,
											"productPeriod": jsonResponse.productPeriod, // 상품개월수
											"productPeriodUnit":scwin.pgMonthOrDay,
											"productPrice": jsonResponse.priceKRW, // 상품가격
											// "orderId": rsp.merchant_uid, // 주문번호
											"productName": jsonResponse.productName, // 상품명
											// "regDate": rsp.paid_at, // 결제시각
											"userId": EMAIL, // 사용자 이메일 주소
											// "payTypeCd": payTypeCd, // 상품분류값 (1개월 '1' or 1년 '2),
											"currency" : "KRW",
											"pgProvider" : "toss" // pg사 string값 ('toss' or 'paypal')
									}
								}


								executeAjaxToken("/payment/subscribe/payment.pwkjson", data, scwin.onSuccess_toss)
							} else {
								console.log("IMP.requestpay fail",rsp)
							}
						}
				);
			};

			scwin.onSuccess_toss = async function(e){
				console.log('toss success', e);
				let success_toss_data = e.response;

				var payTypeCd = $p.getParameter('data').payTypeCd;

				if(e.code == 0){
					// e.code 0일 때 success
					let pricing_in_json = {};

					pricing_in_json.order_id = success_toss_data.payments.merchant_uid;
					pricing_in_json.customer_uid = success_toss_data.payments.customer_uid;
					pricing_in_json.imp_uid = success_toss_data.payments.imp_uid;
					pricing_in_json.pay_type_cd = payTypeCd;
					/**
					 * 결제 완료 이후 w-hive 에 저장할 데이터 api 처리
					 * @type {string}
					 */
					const url = common.uri.setUserInfoPricingCreate;
					const method = "POST";
					const headers = {"Content-Type": "application/json; charset=utf-8"};

					await common.http.fetch(url, method, headers, pricing_in_json)
							.then(res => {
								if(Array.isArray(res)) {
									if (res != null && res[0].result === "success") {
										let options = {
											id : "otpPopup2",
											type : "wframePopup",
											// width: "400px",
											// height: "500px",
											top: "0px",
											left: "0px",
											className: "otpPopup2",
											dataObject: {
												type: "json",
												name: "data",
												data: {
													res : e,
													payTypeCd : payTypeCd,
													parentPopupID : $p.getFrame().paramObj.popupID
												}
											}
										};
										/**
										 * 결제 완료시 결제 완료 페이지로 이동
										 */
										$p.openPopup("/pricing/WsUsrPriceCompletePopup.xml",  options );
										let id = document.querySelector('.otpPopup2').id;
										document.querySelector(`#${id}_header`).remove();
										document.querySelector(`#${id}_content`).style.background = 'none';
										document.querySelector(`#${id}`).style.background = 'none';
										document.querySelector(`#${id}`).style.width = '100%';
										document.querySelector(`#${id}`).style.height = '100%';

									} else {

									}

								}
							})
							.catch(() => {

							});


				}else {

				}
			};

scwin.closeBtn_onclick = function(e) {
	$p.closePopup($p.getFrame().paramObj.popupID);
};


			/**
			 * 사용 안하는 함수
			 */
scwin.btn_next_onclick = function(e) {
    var payTypeCd = $p.getParameter('data').payTypeCd;
    var USER_ID = $p.getParameter('data').USER_ID;

    const checkboxes = document.querySelectorAll('input[type="checkbox"]');
    let num = 0;
    
    checkboxes.forEach((checkbox) => {
        if(checkbox.checked) num ++;
    })

    if(checkboxes.length -1 > num) {
        confirm("이용약관 동의를 해주세요.");
        // openPopup({
        //     type: 'confirm',
        //     title:'Information',
        //     message:'이용약관 동의를 해주세요.',
        //     callback: () => {
        //         $p.$(".loadingBox").css("display","block");
        //     },
        //     loadCallback: (popup) => {
        //         popup.querySelector('.alertbox').style.zIndex = 6101;
        //         popup.querySelector('.dim').style.zIndex = 6100;
        //     }
        // })
        return false;
    }

    $p.closePopup($p.getFrame().paramObj.popupID);
    let options = {  
        id : "otpPopup", 
        type : "wframePopup", 
        top: "0px",
        left: "0px",
        className: "otpPopup",
        dataObject: {
            type: "json",
            name: "data",
            data: {
                USER_ID : USER_ID,
                payTypeCd : payTypeCd
            }
        }
    }; 
    
    $p.openPopup("/xml/usr/price/WsUsrPricePopup2.xml",  options );
    
    let id = document.querySelector('.otpPopup').id;
    document.querySelector(`#${id}_header`).remove();
    document.querySelector(`#${id}_content`).style.background = 'none';
    document.querySelector(`#${id}`).style.background = 'none';
    document.querySelector(`#${id}`).style.width = '100%';
    document.querySelector(`#${id}`).style.height = '100%';	
};

scwin.checkall_onviewchange = function(e) {
    const checkboxes = document.querySelectorAll('input[type="checkbox"]');

    checkboxes.forEach((checkbox) => {
        checkbox.checked = e.checked
    })
};

scwin.term_popup_onclick = function(e) {
    var options = {  
	    id : "privatyPopup", 
	    type : "wframePopup", 
	    width: "400px", 
	    height: "500px",
	    top: "0px",
	    left: "0px",
	    className: "privatyPopup",
        dataObject: {
            type: "json",
            name: "data",
            data: {
                e : e
            }
        }
	}; 
	$p.openPopup("/pricing/WsUsrRegPrivatyPolicy.xml",  options );
	
	var id = document.querySelector('.privatyPopup').id;
    document.querySelector(`#${id}_header`).remove();
    document.querySelector(`#${id}_content`).style.background = 'none';
    document.querySelector(`#${id}`).style.background = 'none';
    document.querySelector(`#${id}`).style.width = '100%';
    document.querySelector(`#${id}`).style.height = '100%';
    document.querySelector(`#${id}_body`).style.top = '0';
    id = '';
};

			function addComma (value){
				value = value.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
				return value;
			};


]]></script>
    </head>
    <body ev:onpageload="scwin.onpageload">
    	<xf:group class="layer type04" id="" style="width:500px;">
    		<xf:group class="btnclosebox" id="" style="">
    			<xf:trigger class="btn_close" id="closeBtn" style="" type="button" ev:onclick="scwin.closeBtn_onclick">
    				<xf:label><![CDATA[닫기]]></xf:label>
    			</xf:trigger>
    		</xf:group>





    		<w2:textbox class="pop_tit" id="" label="결제" style=""></w2:textbox>
    		<xf:group id="" class="box_info" tagname="ul">
    			<xf:group id="" tagname="li">
    				<w2:textbox style="" id="textbox1" label="결제 금액" class="tit" ev:onclick="scwin.textbox1_onclick"></w2:textbox>
    				<xf:group id="">
    					<w2:textbox style="" id="price" label="" class="num" tagname="span"></w2:textbox>
    					<w2:textbox class="" id="" label="원" style="" tagname="span"></w2:textbox>
    					<w2:textbox class="sub" id="product_plan" label="" style="" tagname="span"></w2:textbox>
    				</xf:group>
    			</xf:group>
    			<xf:group id="" tagname="li" style="">
    				<w2:textbox class="tit" id="" label="상품명" style=""></w2:textbox>
    				<xf:group id="">
    					<w2:textbox class="" id="product_name" label="" style="" tagname="span"></w2:textbox>
    				</xf:group>
    			</xf:group>
    		</xf:group>
    		<w2:textbox class="tit_sub" id="" label="이용약관" style=""></w2:textbox>
    		<xf:group id="" class="box_agree">
    			<xf:select ref="" appearance="full" style="" id="checkall" rows="" selectedindex="-1" class="allchk" cols=""
    				renderType="checkboxgroup" ev:onchange="scwin.checkall_onchange" ev:onviewchange="scwin.checkall_onviewchange">
    				<xf:choices>
    					<xf:item>
    						<xf:label><![CDATA[이용약관에 전체 동의합니다.]]></xf:label>
    						<xf:value></xf:value>
    					</xf:item>
    				</xf:choices>
    			</xf:select>
<!--    			<xf:group class="grp_agree" id="" style="display: none;">-->
<!--    				<xf:select appearance="full" class="" cols="" id="" ref="" rows="" selectedindex="-1" style=""-->
<!--    					renderType="checkboxgroup">-->
<!--    					<xf:choices>-->
<!--    						<xf:item>-->
<!--    							<xf:label><![CDATA[교환/환불정책 동의]]></xf:label>-->
<!--    							<xf:value><![CDATA[]]></xf:value>-->
<!--    						</xf:item>-->
<!--    					</xf:choices>-->
<!--    				</xf:select>-->
<!--    				<w2:anchor class="detail" id="" outerDiv="false" style="">-->
<!--    					<xf:label><![CDATA[내용보기]]></xf:label>-->
<!--    				</w2:anchor>-->
<!--    			</xf:group>-->
    			<xf:group class="grp_agree" id="" style="">
    				<xf:select appearance="full" class="" cols="" id="allagreeCheckid" ref="" rows="" selectedindex="-1" style=""
    					renderType="checkboxgroup">
    					<xf:choices>
    						<xf:item>
    							<xf:label><![CDATA[개인정보처리방침 동의]]></xf:label>
    							<xf:value><![CDATA[]]></xf:value>
    						</xf:item>
    					</xf:choices>
    				</xf:select>
    				<w2:anchor class="detail" id="privacy_popup" outerDiv="false" style="" ev:onclick="scwin.term_popup_onclick('1')">
    					<xf:label><![CDATA[내용보기]]></xf:label>
    				</w2:anchor>
    			</xf:group>
    			<xf:group class="grp_agree" id="" style="">
    				<xf:select appearance="full" class="" cols="" id="" ref="" rows="" selectedindex="-1" style=""
    					renderType="checkboxgroup">
    					<xf:choices>
    						<xf:item>
    							<xf:label><![CDATA[이용약관 동의]]></xf:label>
    							<xf:value><![CDATA[]]></xf:value>
    						</xf:item>
    					</xf:choices>
    				</xf:select>
    				<w2:anchor class="detail" id="policy_popoup" outerDiv="false" style="" ev:onclick="scwin.term_popup_onclick('2')">
    					<xf:label><![CDATA[내용보기]]></xf:label>
    				</w2:anchor>
    			</xf:group>
    		</xf:group>
    		<xf:group class="form_box" id="" style="">
    			<xf:group id="" class="btnbox" style="">
    				<xf:trigger style="" id="" type="button" class="btn_org_line" ev:onclick="scwin.closeBtn_onclick">
    					<xf:label><![CDATA[취소]]></xf:label>
    				</xf:trigger>
    				<xf:trigger class="btn_org" id="btn_next" style="width: 140px;" type="button" ev:onclick="scwin.prodOneOnclick">
    					<xf:label><![CDATA[결제]]></xf:label>
<!--						<xf:label><![CDATA[결제수단 선택]]></xf:label>-->
    				</xf:trigger>
    			</xf:group>
    		</xf:group>
    		<xf:group class="pop_footer" id="" style="">
    			<w2:textbox class="logo" id="" label="(주)인스웨이브시스템즈" style=""></w2:textbox>
    			<w2:textbox class="" id="" label="서울시 강서구 공항대로 247, 퀸즈파크나인 C동 12층 (07803)&lt;br/&gt;Tel : 02-2082-1400" style=""
    				escape="false">
    			</w2:textbox>
    		</xf:group>
    	</xf:group>

    </body>
</html>
