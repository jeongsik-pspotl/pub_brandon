buildscript {
	ext {
		springBootVersion = '2.4.1'
	}
	ext['log4j2.version'] = '2.17.1'
	repositories {
		mavenCentral()
	}
	dependencies {
//		exclude("org.springframework.boot", "spring-boot-starter-logging")
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		//classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
//		classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.3"
	}
}

apply plugin: 'war'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//apply plugin: "org.sonarqube"

group 'com.inswave.whive'
version '1.0-SNAPSHOT'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

// w-hive profile 설정
ext.profile = (!project.hasProperty('profile') || !profile) ? 'local' : profile

// 리소스 디렉토리 추가
sourceSets {
	main {
		resources {
			"src/main/resources/${profile}"
		}
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}

}

configurations.all {
	resolutionStrategy.eachDependency { DependencyResolveDetails details ->
		if (details.requested.group == 'org.apache.logging.log4j') {
			details.useVersion '2.17.1'
		}
	}
}

bootRun {
	sourceResources sourceSets.main
}

bootWar {
	print( " War : ${profile} " )
	// war 배포시 /{profile}/application.yml 파일 복사 하는 설정 추가
	from("src/main/resources/${profile}/") {
		into "WEB-INF/classes"
	}
//	from("src/main/resources/${profile}/hazelcast.yamll") {
//		into "WEB-INF/classes/hazelcast.yamll"
//	}
	archiveFileName = 'ROOT.war'
	archiveVersion = "1.0.0"
}

bootJar {
//	archivesBaseName('whive_headquater')
	archiveFileName = 'ROOT.jar'
	archiveVersion = "0.0.1"
}

repositories {
	mavenCentral()
}

dependencies {
	implementation project(':common')
	implementation fileTree(dir: 'libs', include: ['*.jar'])
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-parent:2.4.1'

	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-mail:2.5.4'
//	implementation('org.springframework.boot:spring-boot-starter-websocket') {
//		exclude module: 'spring-boot-starter-tomcat'
//	}

	implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.4.2'
	implementation 'io.awspring.cloud:spring-cloud-aws-parameter-store-config:2.3.3'
	implementation 'com.coveo:spring-boot-parameter-store-integration:1.1.2'
//	implementation 'org.springframework.cloud:spring-cloud-starter-aws-messaging:2.2.6.RELEASE'
//	implementation 'org.springframework.cloud:spring-cloud-starter-aws-parameter-store-config:2.2.6.RELEASE'

	implementation group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.3.5.RELEASE'
	implementation group: 'org.springframework.security', name: 'spring-security-jwt', version: '1.0.10.RELEASE'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:1.17'
	implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.36'
	implementation(platform("org.apache.logging.log4j:log4j-bom:2.17.1"))

//	implementation 'com.hazelcast:hazelcast-all:4.2.4'

	implementation 'com.hazelcast:hazelcast:5.2.3'
	// 한투 저축은행 환경으로 인해 추가
	implementation 'com.sun.xml.bind:jaxb-core:2.3.0.1'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'com.sun.xml.bind:jaxb-impl:2.3.1'

	implementation 'org.apache.commons:commons-exec:1.3'

	/** web security 관련 문제  */
	implementation "jakarta.xml.bind:jakarta.xml.bind-api:2.3.2"
	implementation "org.glassfish.jaxb:jaxb-runtime:2.3.2"

	implementation 'io.springfox:springfox-swagger2:2.6.1'
	implementation 'io.springfox:springfox-swagger-ui:2.6.1'
	
	compileOnly 'org.projectlombok:lombok'
//	providedRuntime 'mysql:mysql-connector-java:8.0.19'
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.1.0'
//	runtime 'mysql:mysql-connector-java:8.0.19'
	annotationProcessor 'org.projectlombok:lombok'
}

ext {
	set('springCloudVersion', "2020.0.6")
}

dependencyManagement {
	imports {
		"org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}