buildscript {
    ext.kotlin_version = '1.4.20-RC'
    ext {
		springBootVersion = '2.4.1'
	}
	ext['log4j2.version'] = '2.17.1'
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		// classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.3"
//        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'war'
//apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//apply plugin: "org.sonarqube"

group 'com.pspotl.sidebranden'
version '1.0-SNAPSHOT'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

// w-hive profile 설정
ext.profile = (!project.hasProperty('profile') || !profile) ? 'local' : profile

// 리소스 디렉토리 추가
sourceSets {
	main {
		resources {
			"src/main/resources/${profile}"
		}
	}
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}

	compileOnly {
		extendsFrom annotationProcessor
	}
}

configurations.all {
	resolutionStrategy.eachDependency { DependencyResolveDetails details ->
		if (details.requested.group == 'org.apache.logging.log4j') {
			details.useVersion '2.17.1'
		}
	}
}

bootRun {
	sourceResources sourceSets.main
}

bootWar {
	print( " War : ${profile} " )
	// war 배포시 /{profile}/application.yml 파일 복사 하는 설정 추가
	from("src/main/resources/${profile}/application.yml") {
		into "WEB-INF/classes"
	}

	archiveFileName = 'ROOT.war'
	archiveVersion = "1.0.0"
}

bootJar {

	archiveFileName = 'ROOT.jar'
	archiveVersion = "0.0.1"
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'io.jsonwebtoken:jjwt:0.9.0'
	implementation  'cn.hutool:hutool-core:4.0.1'
	implementation 'org.apache.httpcomponents:httpclient:4.5.12'
	compileOnly 'org.projectlombok:lombok'
	implementation 'org.apache.commons:commons-exec:1.3'
	implementation 'commons-cli:commons-cli:1.4'
	implementation 'commons-net:commons-net:3.6'
	implementation 'commons-fileupload:commons-fileupload:1.4'
//	implementation 'org.apache.commons:commons-compress:1.20'

	implementation 'org.apache.commons:commons-lang3:3.0'
	implementation 'org.apache.commons:commons-compress:1.3'
	implementation 'net.lingala.zip4j:zip4j:2.11.5'

	implementation 'me.desair.tus:tus-java-server:1.0.0-2.0'
//	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.4'
	implementation group: 'commons-io', name: 'commons-io', version: '2.4'
	implementation 'org.apache.httpcomponents:httpmime:4.3.4'


	implementation 'com.jcraft:jsch:0.1.54'
	implementation 'com.google.zxing:core:3.4.0'
	implementation 'com.google.zxing:javase:3.4.0'

	annotationProcessor 'org.projectlombok:lombok'
	implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.26'
	implementation(platform("org.apache.logging.log4j:log4j-bom:2.17.1"))
	implementation 'org.yaml:snakeyaml:1.33'
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	implementation 'com.google.code.gson:gson:2.8.9'
	implementation 'org.springframework:spring-test'
	implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'

	implementation 'com.hazelcast:hazelcast-all:4.2.4'

	implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.3.3'

	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

	implementation 'org.eclipse.jgit:org.eclipse.jgit:5.13.1.202206130422-r'
	implementation 'org.eclipse.jgit:org.eclipse.jgit.ssh.apache:5.13.1.202206130422-r'

}

